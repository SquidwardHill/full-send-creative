// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output   = "./node_modules/@prisma/client"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  relationMode = "prisma"
}

model CaseStudy {
  id            String @id @default(cuid())
  title         String
  slug          String @unique
  hook          String
  resumeSummary String
  tldr          String @db.Text // HTML content

  challenge    String @db.Text // HTML content
  task         String @db.Text // HTML content
  contribution String @db.Text // HTML content
  result       String @db.Text // HTML content
  themeColor   String @default("purple-pizzazz-500")

  skills        CaseStudySkill[]
  images Image[]
  
  active        Boolean @default(true)
  showcase      Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


//Each Case Study has many Skills, each representing a Tool used in a specific SkillArea.
model CaseStudySkill {
  id           String      @id @default(cuid())
  caseStudy    CaseStudy   @relation(fields: [caseStudyId], references: [id])
  caseStudyId  String

  tool         Tool        @relation(fields: [toolId], references: [id])
  toolId       String

  area         SkillArea
}

model Tool {
  id             String            @id @default(cuid())
  name           String            @unique
  icon           String?          
  website        String?          
  usedInSkills   CaseStudySkill[]  
}

enum SkillArea {
  PLANNING
  DESIGN
  FRONTEND
  BACKEND
  BUILD
  TESTING
  WORKFLOW
}

model Image {
  id          String    @id @default(cuid())
  caseStudy   CaseStudy @relation(fields: [caseStudyId], references: [id])
  caseStudyId String
  type        ImageType

  url         String
  alt         String?
  description String?
  tags        String[]  @default([])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([caseStudyId, type])
}

enum ImageType {
  COVER
  PROCESS
}
